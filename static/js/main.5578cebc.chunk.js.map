{"version":3,"sources":["global.js","context.js","Components/Navbar.js","Components/Editor.js","Components/EditorPanel.js","Components/OutputScreen.js","Components/MainPanel.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","AppContext","React","createContext","AppProvider","children","useState","currentTab","setCurrentTab","isInDefaultMode","setIsInDefaultMode","html","setHtml","css","setCss","js","setJs","srcDoc","setsrcDoc","fontSize","setFontSize","FlexDirectionOfEditors","layoutDirection","totalWidthOfEditors","minTotalHeightOfEditors","resizeableDirectionOfEditorPanel","resizeDirectionOfEditor","view","setView","Provider","value","handleView","useGlobalContext","useContext","NavPanel","Styled","nav","Button","button","Controls","div","Hamburger","Navbar","onClick","className","type","readOnly","id","EditorPanel","language","Editor","displayName","onChange","onBeforeChange","editor","data","options","lineWrapping","lineNumbers","lint","mode","theme","matchBrackets","EditorContainer","Frame","main","OutputScreen","useEffect","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","Main","MainPanel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5578cebc.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n    *{\r\n        margin: 0;\r\n        padding:0;\r\n        box-sizing:border-box;\r\n        scrollbar-width: thin;\r\n        \r\n    }\r\n    ::-webkit-scrollbar-track{\r\n        width:4px;\r\n    }\r\n    ::-webkit-scrollbar-track-piece{\r\n        width:4px;\r\n    }\r\n    #root{\r\n        width:100vw;\r\n        min-height:100vh;\r\n        \r\n    }\r\n    :root{\r\n        --secondary-clr:#182024;\r\n        --btn-clr:#219897;\r\n        --btn-hover:#23bfbe;\r\n        --tertiary-clr:#4f5e66;\r\n        --ff-primary:'Poppins', sans-serif;\r\n        --ff-secondary:'Fira Code', monospace;\r\n    \r\n}\r\n   \r\n    body{\r\n        background-color:#263238;\r\n        overflow-x: hidden;\r\n        font-family: var(--ff-primary);\r\n        font-weight:300;\r\n        caret-color: var(--btn-clr);\r\n        height:fit-content;\r\n       \r\n    }\r\n    .CodeMirror-lines {\r\n        font-family: var(--ff-secondary);\r\n        font-weight:400;\r\n    }\r\n   \r\n`\r\nexport default GlobalStyle;","import React,{useContext,useState} from \"react\";\r\n\r\n\r\n\r\nconst AppContext=React.createContext();\r\n\r\nconst AppProvider=({children})=>{\r\n    const [currentTab,setCurrentTab]=useState(\"xml\");\r\n    const [isInDefaultMode,setIsInDefaultMode]=useState(true);\r\n    const [html,setHtml]=useState(\"\");\r\n    const [css,setCss]=useState(\"\");\r\n    const [js,setJs]=useState(\"\");\r\n    const [srcDoc,setsrcDoc]=useState(\"\");\r\n    const [fontSize,setFontSize]=useState(22);\r\n    const [view,setView]=useState({FlexDirectionOfEditors:\"column\",layoutDirection:\"row\",totalWidthOfEditors:\"30vw\",minTotalHeightOfEditors:\"40vh\",resizeableDirectionOfEditorPanel:\"horizontal\",resizeDirectionOfEditor:\"vertical\"});\r\n    const handleView=()=>{\r\n            if(isInDefaultMode){\r\n                setIsInDefaultMode(false);\r\n                setView({FlexDirectionOfEditors:\"row\",layoutDirection:\"column\",totalWidthOfEditors:\"100vw\",minTotalHeightOfEditors:\"60vh\",resizeableDirectionOfEditorPanel:\"vertical\",resizeDirectionOfEditor:\"horizontal\"})\r\n            }\r\n            else{\r\n                setIsInDefaultMode(true);\r\n                setView({FlexDirectionOfEditors:\"column\",layoutDirection:\"row\",totalWidthOfEditors:\"30vw\",minTotalHeightOfEditors:\"40vh\",resizeableDirectionOfEditorPanel:\"horizontal\",resizeDirectionOfEditor:\"vertical\"});\r\n            }\r\n            \r\n    }\r\n    return(\r\n        <AppContext.Provider value={{currentTab,setCurrentTab,html,css,js,setHtml,setCss,setJs,srcDoc,setsrcDoc,isInDefaultMode,fontSize,setFontSize,view,setView,handleView}}>\r\n            {children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext=()=>{\r\n    return useContext(AppContext);\r\n}\r\n\r\nexport {AppContext,AppProvider};","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport { FaCaretSquareUp,FaCaretSquareDown } from \"react-icons/fa\";\r\nimport { useGlobalContext } from \"../context\";\r\n\r\nconst Navbar=()=>{\r\n    const {fontSize,setFontSize,handleView,setCurrentTab} = useGlobalContext();\r\n   \r\n    return(\r\n        <NavPanel>\r\n           <Hamburger>\r\n                <Button onClick={()=>setCurrentTab(\"xml\")}>HTML</Button>\r\n                <Button onClick={()=>setCurrentTab(\"css\")}>CSS</Button>\r\n                <Button onClick={()=>setCurrentTab(\"javascript\")}>Js</Button>\r\n            </Hamburger>\r\n            <Controls>\r\n                <FaCaretSquareUp className=\"icon\" onClick={()=>fontSize<30&&setFontSize(fontSize+1)}/>\r\n                    <input type=\"text\" readOnly={true} value={`${fontSize}px`}/>\r\n                <FaCaretSquareDown className=\"icon\"onClick={()=>fontSize>15&&setFontSize(fontSize-1)}/>\r\n            </Controls>\r\n           \r\n            <Button onClick={handleView} id=\"viewChanger\">Change View</Button>\r\n        </NavPanel>\r\n    )\r\n}\r\nconst NavPanel=Styled.nav`\r\n    top:0;\r\n    width:100vw;\r\n    background-color:var(--secondary-clr);\r\n    display:flex;\r\n    justify-content:flex-end;\r\n    align-items:center;\r\n    padding-right:2em;\r\n  @media(max-width:600px){\r\n    justify-content:space-around;\r\n    padding:0.5em 1em;\r\n    justify-content:space-between;\r\n    #viewChanger{\r\n        display:none;\r\n    }\r\n  }\r\n`\r\nconst Button=Styled.button`\r\n    background-color:var(--btn-clr);\r\n    color:white;\r\n    transition:background-color 350ms linear;\r\n    font-size:1.1rem;\r\n    padding:0.3em 0.5em;\r\n    outline:1px solid transparent;\r\n    border:1px solid transparent;\r\n    border-radius:0.2rem;\r\n    min-width:7ch;\r\n    margin:1em 0.1em;\r\n    &:hover{\r\n        cursor:pointer;\r\n        background-color:var(--btn-hover) ;\r\n    }\r\n    &:focus{\r\n        outline:1px solid transparent;\r\n        border:1px solid transparent;\r\n    }\r\n    @media(max-width:420px){\r\n        font-size:0.9rem;\r\n        \r\n    }\r\n`;\r\nconst Controls=Styled.div`\r\n    display: flex;\r\n    margin:0 1em;\r\n    justify-content:center;\r\n    align-items:center;\r\n    @media(max-width:420px){\r\n       margin:0 0.5em;\r\n  }\r\n    input{\r\n        font-size:1.2rem;\r\n        width:5ch;\r\n        padding:0.2em;\r\n        background-color:#263238;\r\n        border:1px solid transparent;\r\n        outline:1px solid transparent;\r\n        color:var(--btn-clr);\r\n        text-align:center;\r\n        :focus{\r\n            border:1px solid transparent;\r\n            outline:1px solid transparent;\r\n        }\r\n        @media(max-width:420px){\r\n        font-size:0.9rem;\r\n        }\r\n    }\r\n   .icon{\r\n    font-size:2.1rem;\r\n    color:var(--btn-clr);\r\n    transition:color 350ms linear;\r\n    background-color:var(--secondary-clr);\r\n    &:hover{\r\n        cursor:pointer;\r\n        color:var(--btn-hover);\r\n    }\r\n    @media(max-width:420px){\r\n        font-size:1.6rem;\r\n        }\r\n   }\r\n  \r\n`;\r\n\r\nconst Hamburger=Styled.div`\r\n       display:none;\r\n    @media(max-width:600px){\r\n        display:flex;\r\n    }\r\n`\r\nexport default Navbar;","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/css/css\";\r\nimport \"codemirror/mode/javascript/javascript\"\r\nimport {Controlled as ControlledEditor} from \"react-codemirror2\";\r\nimport { useGlobalContext } from \"../context\"\r\nimport { BiCodeAlt } from \"react-icons/bi\";\r\nconst Editor=({value,language,displayName,onChange})=>{\r\n    \r\n    const handleEdit=(editor,data,value)=>{\r\n        onChange(value);\r\n    }\r\n    const {fontSize,view,currentTab} = useGlobalContext();\r\n    return(\r\n        <EditorPanel fontSize={fontSize} view={view} language={language} currentTab={currentTab}>\r\n            <h1><BiCodeAlt/>{displayName}</h1>\r\n            <ControlledEditor\r\n                onBeforeChange={handleEdit}\r\n                value={value}\r\n                className=\"editor__wrapper\"\r\n                \r\n                options={{\r\n                    lineWrapping:true,\r\n                    lineNumbers:true,\r\n                    lint:true,\r\n                    mode:language,\r\n                    theme:\"material\",\r\n                    matchBrackets:true\r\n                }}\r\n            />\r\n        </EditorPanel>\r\n    )\r\n}\r\nconst EditorPanel=Styled.div`\r\n    width:100%;\r\n    min-height:50px;\r\n    resize:${({view})=>{return view.resizeDirectionOfEditor}};\r\n    overflow:auto;\r\n    &+&{\r\n        border-left:0.2rem solid var(--tertiary-clr) ;\r\n    }\r\n    h1{\r\n        border-top:0.5rem solid var( --tertiary-clr);\r\n        background-color:var(--secondary-clr);\r\n        color:#FFF;\r\n        padding:0.2em 0.4em;\r\n        font-size:1.5rem;\r\n        text-align:center;\r\n        font-weight:400; \r\n        display:flex;\r\n        align-items:center;\r\n        justify-content:center;\r\n        \r\n    }\r\n    .editor__wrapper{\r\n        width:100%;\r\n       \r\n       \r\n    }\r\n    .CodeMirror-lines {\r\n        font-size:${({fontSize})=>{return fontSize+\"px\"}}\r\n    }\r\n    @media (max-width:600px){\r\n        display:${({currentTab,language})=>{\r\n            if(language!==currentTab) return \"none\"}\r\n        };\r\n        width:100vw;\r\n        height:80vh;\r\n        resize:none;\r\n    }\r\n`;\r\n\r\nexport default Editor;","import React from \"react\";\r\nimport Editor from \"./Editor\";\r\nimport Styled from \"styled-components\";\r\nimport {useGlobalContext} from \"../context\";\r\n\r\nconst EditorPanel=()=>{\r\n    const {html,setHtml,css,setCss,js,setJs,view}=useGlobalContext();\r\n    return (\r\n        <EditorContainer view={view}>\r\n            <Editor language=\"xml\" displayName=\"HTML\" value={html} onChange={setHtml}/>\r\n            <Editor language=\"css\" displayName=\"CSS\" value={css} onChange={setCss}/>\r\n            <Editor language=\"javascript\" displayName=\"JS\" value={js} onChange={setJs}/>\r\n        </EditorContainer>\r\n    )\r\n}\r\n\r\nconst EditorContainer=Styled.div`\r\n    position:relative;\r\n    display:flex;\r\n    flex-direction:${({view})=>{return view.FlexDirectionOfEditors}};\r\n    width:${({view})=>{return view.totalWidthOfEditors}};\r\n    min-width:200px;\r\n    resize:${({view})=>{return view.resizeableDirectionOfEditorPanel}};\r\n    overflow:auto;\r\n    border:0.4rem solid  var(--tertiary-clr);\r\n    @media (max-width:600px){\r\n        flex-direction:row;\r\n        width:100vw;\r\n        resize:none;\r\n    }\r\n`;\r\n\r\n\r\nexport default EditorPanel;","import React,{useEffect} from \"react\";\r\nimport { useGlobalContext } from \"../context\"\r\nimport Styled from \"styled-components\";\r\n\r\n\r\nconst OutputScreen = () => {\r\n    const {html,css,js,srcDoc,setsrcDoc} = useGlobalContext();\r\n    useEffect(()=>{\r\n        const timeout=setTimeout(() => {\r\n            setsrcDoc(`\r\n            <html>\r\n            <head>\r\n                <style>${css}</style>\r\n            </head>\r\n                <body>${html}</body>\r\n                <script>${js}</script>\r\n            </html>\r\n            `)\r\n        }, 700);\r\n       \r\n        return ()=>clearTimeout(timeout);\r\n    },[html,css,js])\r\n    return (\r\n        <Frame>\r\n            <iframe\r\n                srcDoc={srcDoc}\r\n                title=\"output\"\r\n                sandbox=\"allow-modals allow-scripts\"\r\n                frameBorder=\"0\"\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n            />\r\n        </Frame>\r\n    )\r\n}\r\n\r\n\r\nconst Frame=Styled.main`\r\n        position: relative;\r\n        width:100%!important;\r\n        background-color:#fff;\r\n        iframe{\r\n            position:relative;\r\n            top:0;\r\n            left:0;           \r\n            width:100%;\r\n            min-height:100vh!important;\r\n            background-color:#fff;\r\n        }\r\n        `;\r\nexport default OutputScreen;","import React from \"react\";\r\nimport EditorPanel from \"./EditorPanel\";\r\nimport OutputScreen from \"./OutputScreen\";\r\nimport { useGlobalContext } from \"../context\"\r\nimport Styled from \"styled-components\";\r\n\r\nconst MainPanel=()=>{\r\n    const {view}=useGlobalContext();\r\n    return(\r\n        <Main view={view}>\r\n            <EditorPanel/>\r\n            <OutputScreen/>\r\n        </Main>\r\n    )\r\n} \r\n\r\n\r\nconst Main=Styled.main`\r\n  position: relative;\r\n  display:flex;\r\n  flex-direction:${({view})=>{return view.layoutDirection}};\r\n  width:100vw;\r\n  min-height:89vh;\r\n  @media (max-width:600px){\r\n        flex-direction:column;\r\n        resize:none;\r\n    }\r\n`\r\nexport default MainPanel;","import React from \"react\";\nimport GlobalStyle from \"./global\";\nimport Navbar from \"./Components/Navbar\";\nimport { AppProvider } from \"./context\";\nimport MainPanel from \"./Components/MainPanel\";\n\nconst App = () => {\n\n\n  return (\n    <AppProvider>\n      <GlobalStyle />\n      <Navbar />\n      <MainPanel />\n    </AppProvider>\n\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {AppProvider} from \"./context\";\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <AppProvider>\n      <App />\n      </AppProvider>\n  </React.StrictMode>\n    ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}